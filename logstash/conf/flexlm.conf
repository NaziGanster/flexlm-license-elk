input { 
	stdin { } 
	file {
		path => "/var/local/logstash/data/*.log"
		sincedb_path => "/var/local/logstash/data/flexlm.db"
		start_position => beginning 
		ignore_older => 0
   }		  
}

filter {
	#detect date for next lines
    if [message] =~ /TIMESTAMP/ {
        grok {
                match => [ "message", "%{GREEDYDATA:greedy_data} TIMESTAMP %{DATE:flexlm_ts}" ]				
        }
		date { match => [ "flexlm_ts", "M/d/yyyy" ] }
    }
	
	#store date for next lines (memorize plugin)
    memorize {
        fields => [ "flexlm_ts" ]
	#	default => { "flexlm_ts" => "1/1/1900" }
    }
	
	#parse IN/OUT license lines
    if [message] =~ /OUT:/ or [message] =~ /IN:/ {
		mutate { strip => "message" } #clean initial-end spaces
        grok {			
			match => [ "message", "%{DATA:checkout_time} \(%{DATA:vendor}\) (?<in_out>(OUT|IN))\: \"%{DATA:feature_name}\" %{DATA:user_id}@%{USERNAME:client_machine}" ]
        }		
        mutate { replace => ["checkout_time", "%{flexlm_ts} %{checkout_time}"] }
		date { match => [ "checkout_time", "M/d/yyyy H:mm:ss" ] }
		mutate { replace => ["message", "%{+YYYY-MM-dd HH:mm:ss Z} %{vendor} %{in_out} %{feature_name} %{user_id} %{client_machine}"] }
    } else { #discard other lines from log file
		drop { }
	}
}

output {  
	#index to ElasticSearch
#    elasticsearch {
#        action => "index"
#        hosts => "elastic-container:9200"
#        index => "flexlm-%{+YYYY.MM.dd}"
#        workers => 1
#    }

	#backup processed data into txt files
	file {
	   path => "/var/local/logstash/data/processed/flexlm_%{+YYYY-MM-dd}.txt"
	   codec =>  line { format => "%{message}"}
	}
	
    stdout {
        codec => rubydebug
    }	
}